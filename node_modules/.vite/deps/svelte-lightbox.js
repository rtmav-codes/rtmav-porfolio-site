import "./chunk-BAZ2GOS4.js";
import {
  writable
} from "./chunk-QRNL2DTN.js";
import "./chunk-AZLU4B3P.js";
import {
  fade
} from "./chunk-U3YWMGUD.js";
import {
  add_locations,
  append_styles,
  bind_prop,
  bind_this,
  bubble_event,
  check_target,
  cleanup_styles,
  createEventDispatcher,
  css_props,
  hmr,
  if_block,
  init,
  legacy_api,
  legacy_rest_props,
  onDestroy,
  onMount,
  prop,
  sanitize_slots,
  set_attributes,
  setup_stores,
  slot,
  spread_props,
  store_get,
  store_set,
  toggle_class,
  transition,
  validate_store,
  wrap_snippet
} from "./chunk-UXPLXY3I.js";
import {
  append,
  comment,
  set_text,
  template
} from "./chunk-FVYRHBDI.js";
import {
  $window,
  FILENAME,
  HMR,
  child,
  deep_read_state,
  event,
  first_child,
  get,
  getContext,
  legacy_pre_effect,
  legacy_pre_effect_reset,
  mark_module_end,
  mark_module_start,
  mutable_state,
  pop,
  push,
  reset,
  set,
  setContext,
  sibling,
  strict_equals,
  template_effect
} from "./chunk-3M5DKLBU.js";
import "./chunk-WC3LVQOZ.js";
import "./chunk-2PHZ6JD3.js";
import "./chunk-RN5FR434.js";
import "./chunk-5AQFBOJN.js";

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/LightboxThumbnail.svelte
mark_module_start();
LightboxThumbnail[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/LightboxThumbnail.svelte";
var root = add_locations(template(`<div><!></div>`), LightboxThumbnail[FILENAME], [[1, 0]]);
var $$css = {
  hash: "s-rAZsAPxj5eke",
  code: "\n    div.s-rAZsAPxj5eke {\n        position: static;\n        cursor: zoom-in;\n    }\n    .svelte-lightbox-thumbnail > * {\n        max-width: 100%;\n        height: auto;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlnaHRib3hUaHVtYm5haWwuc3ZlbHRlIiwibWFwcGluZ3MiOiIiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkxpZ2h0Ym94VGh1bWJuYWlsLnN2ZWx0ZSJdfQ== */"
};
function LightboxThumbnail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, []);
  push($$props, false, LightboxThumbnail);
  append_styles($$anchor, $$css);
  var div = root();
  let attributes;
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  template_effect(() => {
    attributes = set_attributes(div, attributes, { "aria-label": "thumbnail", ...$$restProps }, "s-rAZsAPxj5eke");
    toggle_class(div, "svelte-lightbox-thumbnail", true);
  });
  event("click", div, function($$arg) {
    bubble_event.call(this, $$props, $$arg);
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  LightboxThumbnail = hmr(LightboxThumbnail, () => LightboxThumbnail[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-rAZsAPxj5eke");
    module.default[HMR].source = LightboxThumbnail[HMR].source;
    set(LightboxThumbnail[HMR].source, module.default[HMR].original);
  });
}
var LightboxThumbnail_default = LightboxThumbnail;
mark_module_end(LightboxThumbnail);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/BodyChild.svelte
mark_module_start();
BodyChild[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/BodyChild.svelte";
var root2 = add_locations(template(`<div><!></div>`), BodyChild[FILENAME], [[18, 0]]);
function BodyChild($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, []);
  push($$props, false, BodyChild);
  let targetElement = mutable_state();
  let child2;
  const stackTarget = () => {
    child2 = document.createElement("div");
    document.body.appendChild(child2);
    child2.appendChild(get(targetElement));
  };
  const removeTarget = () => {
    if (strict_equals(typeof document, "undefined", false)) {
      document.body.removeChild(child2);
    }
  };
  onMount(stackTarget);
  onDestroy(removeTarget);
  init();
  var div = root2();
  let attributes;
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  bind_this(div, ($$value) => set(targetElement, $$value), () => get(targetElement));
  template_effect(() => attributes = set_attributes(div, attributes, { ...$$restProps }));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  BodyChild = hmr(BodyChild, () => BodyChild[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = BodyChild[HMR].source;
    set(BodyChild[HMR].source, module.default[HMR].original);
  });
}
var BodyChild_default = BodyChild;
mark_module_end(BodyChild);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxHeader.svelte
mark_module_start();
LightboxHeader[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxHeader.svelte";
var root_1 = add_locations(template(`<button>Ã—</button>`), LightboxHeader[FILENAME], [[18, 8]]);
var root3 = add_locations(template(`<div><!></div>`), LightboxHeader[FILENAME], [[16, 0]]);
var $$css2 = {
  hash: "s-tUyDrRTZN3h7",
  code: "\n    div.svelte-lightbox-header.s-tUyDrRTZN3h7 {\n        width: auto;\n        height: 3rem;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n    div.svelte-lightbox-header.fullscreen.s-tUyDrRTZN3h7 {\n	    position: fixed;\n	    z-index: 5;\n	    top: 0;\n	    left: 0;\n	    right: 0;\n    }\n    button.s-tUyDrRTZN3h7 {\n        background: transparent;\n        font-size: 3rem;\n        border: none;\n        color: white;\n    }\n    button.s-tUyDrRTZN3h7:hover {\n        color: lightgray;\n        cursor: pointer;\n    }\n    button.s-tUyDrRTZN3h7:active {\n	    background-color: transparent;\n    }\n    button.fullscreen.s-tUyDrRTZN3h7 {\n	    filter: drop-shadow(0 0 5px black) drop-shadow(0 0 10px black);\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlnaHRib3hIZWFkZXIuc3ZlbHRlIiwibWFwcGluZ3MiOiIiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkxpZ2h0Ym94SGVhZGVyLnN2ZWx0ZSJdfQ== */"
};
function LightboxHeader($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, [
    "closeButtonProps",
    "showCloseButton",
    "enableEscapeToClose",
    "imagePreset"
  ]);
  push($$props, false, LightboxHeader);
  append_styles($$anchor, $$css2);
  const dispatch = createEventDispatcher();
  let closeButtonProps = prop($$props, "closeButtonProps", 24, () => ({}));
  let showCloseButton = prop($$props, "showCloseButton", 8);
  let enableEscapeToClose = prop($$props, "enableEscapeToClose", 8);
  let imagePreset = prop($$props, "imagePreset", 8);
  const handleKey = (event2) => {
    if (enableEscapeToClose() && strict_equals(event2.key, "Escape")) {
      dispatch("close");
    }
  };
  init();
  var div = root3();
  event("keydown", $window, (event2) => handleKey(event2));
  let attributes;
  var node = child(div);
  {
    var consequent = ($$anchor2) => {
      var button = root_1();
      let attributes_1;
      template_effect(() => {
        attributes_1 = set_attributes(button, attributes_1, { ...closeButtonProps() }, "s-tUyDrRTZN3h7");
        toggle_class(button, "fullscreen", strict_equals(imagePreset(), "fullscreen"));
      });
      event("click", button, () => dispatch("close"));
      append($$anchor2, button);
    };
    if_block(node, ($$render) => {
      if (showCloseButton()) $$render(consequent);
    });
  }
  reset(div);
  template_effect(() => {
    attributes = set_attributes(
      div,
      attributes,
      {
        class: "svelte-lightbox-header",
        ...$$restProps
      },
      "s-tUyDrRTZN3h7"
    );
    toggle_class(div, "fullscreen", strict_equals(imagePreset(), "fullscreen"));
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  LightboxHeader = hmr(LightboxHeader, () => LightboxHeader[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-tUyDrRTZN3h7");
    module.default[HMR].source = LightboxHeader[HMR].source;
    set(LightboxHeader[HMR].source, module.default[HMR].original);
  });
}
var LightboxHeader_default = LightboxHeader;
mark_module_end(LightboxHeader);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxBody.svelte
mark_module_start();
LightboxBody[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxBody.svelte";
var root4 = add_locations(template(`<div class="svelte-lightbox-body s-8Vmcsw9z4El9"><!></div>`), LightboxBody[FILENAME], [[5, 0]]);
var $$css3 = {
  hash: "s-8Vmcsw9z4El9",
  code: "\n    div.svelte-lightbox-body.s-8Vmcsw9z4El9 {\n		position: relative;\n        width: auto;\n        height: auto;\n		/* TODO: mitigate this hardcode by using flexbox in lightbox modal <Modal.svelte> */\n        max-height: 80vh;\n    }\n	div.svelte-lightbox-body > * {\n		max-width: 100%;\n		max-height: inherit;\n		height: auto;\n		width: auto;\n		-o-object-fit: contain;\n		   object-fit: contain;\n	}\n	div.svelte-lightbox-body.scroll > * {\n		max-height: 100%;\n	}\n	div.svelte-lightbox-body.expand > * {\n		flex-grow: 1;\n	}\n    div.fullscreen.s-8Vmcsw9z4El9 {\n        width: inherit;\n	    max-width: inherit;\n        height: inherit;\n		max-height: 100%;\n		display: flex;\n		align-items: center;\n		justify-content: center;\n    }\n    div.scroll.s-8Vmcsw9z4El9 {\n		overflow: scroll;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlnaHRib3hCb2R5LnN2ZWx0ZSIsIm1hcHBpbmdzIjoiIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJMaWdodGJveEJvZHkuc3ZlbHRlIl19 */"
};
function LightboxBody($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, LightboxBody);
  append_styles($$anchor, $$css3);
  let imagePreset = prop($$props, "imagePreset", 8);
  let enableImageExpand = prop($$props, "enableImageExpand", 8);
  var div = root4();
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  template_effect(() => {
    toggle_class(div, "fullscreen", strict_equals(imagePreset(), "fullscreen"));
    toggle_class(div, "scroll", strict_equals(imagePreset(), "scroll"));
    toggle_class(div, "expand", enableImageExpand());
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  LightboxBody = hmr(LightboxBody, () => LightboxBody[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-8Vmcsw9z4El9");
    module.default[HMR].source = LightboxBody[HMR].source;
    set(LightboxBody[HMR].source, module.default[HMR].original);
  });
}
var LightboxBody_default = LightboxBody;
mark_module_end(LightboxBody);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/i18n.js
var i18n = writable({
  generateLocalizedGalleryCounter: (activeImage, imageCount) => {
    return `Image ${activeImage + 1} of ${imageCount}`;
  }
});
var i18n_default = i18n;

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxFooter.svelte
mark_module_start();
LightboxFooter[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/LightboxFooter.svelte";
var root_12 = add_locations(template(`<p> </p>`), LightboxFooter[FILENAME], [[22, 8]]);
var root5 = add_locations(template(`<div><h2> </h2> <h5> </h5> <!></div>`), LightboxFooter[FILENAME], [
  [14, 0, [[15, 4], [18, 4]]]
]);
var $$css4 = {
  hash: "s-adyKqJysBV_L",
  code: "\n    div.svelte-lightbox-footer.s-adyKqJysBV_L {\n        width: 100%;\n        height: auto;\n        color: white;\n        text-align: left;\n        position: absolute;\n    }\n    div.svelte-lightbox-footer.fullscreen.s-adyKqJysBV_L {\n        position: fixed;\n        z-index: 5;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        padding-left: 1rem;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlnaHRib3hGb290ZXIuc3ZlbHRlIiwibWFwcGluZ3MiOiIiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkxpZ2h0Ym94Rm9vdGVyLnN2ZWx0ZSJdfQ== */"
};
function LightboxFooter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, [
    "imagePreset",
    "title",
    "description",
    "gallery"
  ]);
  push($$props, false, LightboxFooter);
  append_styles($$anchor, $$css4);
  const $$stores = setup_stores();
  const $i18n = () => (validate_store(i18n_default, "i18n"), store_get(i18n_default, "$i18n", $$stores));
  const localizedGalleryCounter = mutable_state();
  let imagePreset = prop($$props, "imagePreset", 8);
  let title = prop($$props, "title", 8, "");
  let description = prop($$props, "description", 8, "");
  let gallery = prop($$props, "gallery", 8, null);
  const generateLocalizedGalleryCounter = (i18n2, gallery2) => {
    if (strict_equals(gallery2, null, false)) {
      return i18n2.generateLocalizedGalleryCounter(gallery2.activeImage, gallery2.imageCount);
    }
  };
  legacy_pre_effect(
    () => ($i18n(), deep_read_state(gallery())),
    () => {
      set(localizedGalleryCounter, generateLocalizedGalleryCounter($i18n(), gallery()));
    }
  );
  legacy_pre_effect_reset();
  var div = root5();
  let attributes;
  var h2 = child(div);
  var text = child(h2, true);
  reset(h2);
  var h5 = sibling(h2, 2);
  var text_1 = child(h5, true);
  reset(h5);
  var node = sibling(h5, 2);
  {
    var consequent = ($$anchor2) => {
      var p = root_12();
      var text_2 = child(p, true);
      reset(p);
      template_effect(() => set_text(text_2, get(localizedGalleryCounter)));
      append($$anchor2, p);
    };
    if_block(node, ($$render) => {
      if (strict_equals(gallery(), null, false)) $$render(consequent);
    });
  }
  reset(div);
  template_effect(() => {
    attributes = set_attributes(
      div,
      attributes,
      {
        class: "svelte-lightbox-footer",
        ...$$restProps
      },
      "s-adyKqJysBV_L"
    );
    toggle_class(div, "fullscreen", strict_equals(imagePreset(), "fullscreen"));
    set_text(text, title());
    set_text(text_1, description());
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  LightboxFooter = hmr(LightboxFooter, () => LightboxFooter[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-adyKqJysBV_L");
    module.default[HMR].source = LightboxFooter[HMR].source;
    set(LightboxFooter[HMR].source, module.default[HMR].original);
  });
}
var LightboxFooter_default = LightboxFooter;
mark_module_end(LightboxFooter);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/ModalCover.svelte
mark_module_start();
ModalCover[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/ModalCover.svelte";
var root6 = add_locations(template(`<div><!></div>`), ModalCover[FILENAME], [[5, 0]]);
var $$css5 = {
  hash: "s-v7I4X_fr2VM5",
  code: `
    div.svelte-lightbox-overlay.s-v7I4X_fr2VM5 {
        position: fixed;
        z-index: 1000000!important;
        background-color: rgba(43, 39, 45, 0.87);
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        overflow: hidden;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    div.svelte-lightbox-overlay.s-v7I4X_fr2VM5::before {
        content: '';
        position: absolute;
        top: 0; bottom: 0; left: 0; right: 0;
        opacity: 0;
        z-index: -1;
    }
    div.svelte-lightbox-overlay.s-v7I4X_fr2VM5::after {
        content: "";
        clear: both;
        display: table;
    }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kYWxDb3Zlci5zdmVsdGUiLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiTW9kYWxDb3Zlci5zdmVsdGUiXX0= */`
};
function ModalCover($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, ["transitionDuration"]);
  push($$props, false, ModalCover);
  append_styles($$anchor, $$css5);
  let transitionDuration = prop($$props, "transitionDuration", 8);
  var div = root6();
  let attributes;
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  template_effect(() => attributes = set_attributes(
    div,
    attributes,
    {
      class: "svelte-lightbox-overlay",
      "aria-label": "overlay",
      ...$$restProps
    },
    "s-v7I4X_fr2VM5"
  ));
  event("click", div, function($$arg) {
    bubble_event.call(this, $$props, $$arg);
  });
  transition(1, div, () => fade, () => ({ duration: transitionDuration() * 2 }));
  transition(2, div, () => fade, () => ({ duration: transitionDuration() / 2 }));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ModalCover = hmr(ModalCover, () => ModalCover[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-v7I4X_fr2VM5");
    module.default[HMR].source = ModalCover[HMR].source;
    set(ModalCover[HMR].source, module.default[HMR].original);
  });
}
var ModalCover_default = ModalCover;
mark_module_end(ModalCover);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/Modal.svelte
mark_module_start();
Modal[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Modal/Modal.svelte";
var root7 = add_locations(template(`<div><!></div>`), Modal[FILENAME], [[6, 0]]);
var $$css6 = {
  hash: "s-POZTDP35Fr3q",
  code: "\n     div.svelte-lightbox-main.s-POZTDP35Fr3q {\n         position: relative;\n         max-width: 100%;\n         max-height: 100%;\n         height: auto;\n         width: auto;\n         background-color: transparent;\n    }\n     div.svelte-lightbox-main.fullscreen.s-POZTDP35Fr3q {\n	     height: inherit;\n	     width: inherit;\n         max-height: inherit;\n         max-width: inherit;\n     }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kYWwuc3ZlbHRlIiwibWFwcGluZ3MiOiIiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIk1vZGFsLnN2ZWx0ZSJdfQ== */"
};
function Modal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, ["transitionDuration", "imagePreset"]);
  push($$props, false, Modal);
  append_styles($$anchor, $$css6);
  let transitionDuration = prop($$props, "transitionDuration", 8);
  let imagePreset = prop($$props, "imagePreset", 8);
  var div = root7();
  let attributes;
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  template_effect(() => {
    attributes = set_attributes(
      div,
      attributes,
      {
        class: "svelte-lightbox-main",
        "aria-label": "Modal",
        ...$$restProps
      },
      "s-POZTDP35Fr3q"
    );
    toggle_class(div, "fullscreen", strict_equals(imagePreset(), "fullscreen"));
    toggle_class(div, "scroll", strict_equals(imagePreset(), "scroll"));
  });
  transition(3, div, () => fade, () => ({ duration: transitionDuration() }));
  event("click", div, function($$arg) {
    bubble_event.call(this, $$props, $$arg);
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  Modal = hmr(Modal, () => Modal[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-POZTDP35Fr3q");
    module.default[HMR].source = Modal[HMR].source;
    set(Modal[HMR].source, module.default[HMR].original);
  });
}
var Modal_default = Modal;
mark_module_end(Modal);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Lightbox.svelte
mark_module_start();
Lightbox[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Lightbox.svelte";
var root_8 = add_locations(template(`<!> <!> <!>`, 1), Lightbox[FILENAME], []);
var root8 = add_locations(template(`<!> <!>`, 1), Lightbox[FILENAME], []);
function Lightbox($$anchor, $$props) {
  check_target(new.target);
  const $$slots = sanitize_slots($$props);
  push($$props, false, Lightbox);
  let title = prop($$props, "title", 8, "");
  let description = prop($$props, "description", 8, "");
  let imagePreset = prop($$props, "imagePreset", 8, "");
  let customization = prop($$props, "customization", 24, () => ({}));
  let transitionDuration = prop($$props, "transitionDuration", 8, 300);
  let keepBodyScroll = prop($$props, "keepBodyScroll", 8, false);
  let enableImageExpand = prop($$props, "enableImageExpand", 8, false);
  let enableFallbackThumbnail = prop($$props, "enableFallbackThumbnail", 8, true);
  let enableEscapeToClose = prop($$props, "enableEscapeToClose", 8, true);
  let enableClickToClose = prop($$props, "enableClickToClose", 8, false);
  let showCloseButton = prop($$props, "showCloseButton", 8, true);
  let isVisible = prop($$props, "isVisible", 12, false);
  let modalClicked = false;
  const toggle = () => {
    isVisible(!isVisible());
    toggleScroll();
  };
  const open = () => {
    isVisible(true);
    toggleScroll();
  };
  const close = () => {
    isVisible(false);
    toggleScroll();
  };
  const coverClick = () => {
    if (!modalClicked || enableClickToClose()) {
      close();
    }
    modalClicked = false;
  };
  const modalClick = () => {
    modalClicked = true;
  };
  let toggleScroll = () => {
  };
  const programmaticController = { toggle, open, close };
  onMount(() => {
    const defaultOverflow = document.body.style.overflow;
    toggleScroll = () => {
      if (!keepBodyScroll()) {
        if (isVisible()) {
          document.body.style.overflow = "hidden";
        } else {
          document.body.style.overflow = defaultOverflow;
        }
      }
    };
  });
  init();
  var fragment = root8();
  var node = first_child(fragment);
  {
    var consequent_1 = ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      LightboxThumbnail_default(node_1, spread_props(() => {
        var _a;
        return ((_a = customization()) == null ? void 0 : _a.thumbnailProps) || {};
      }, {
        $$events: { click: toggle },
        children: wrap_snippet(Lightbox, ($$anchor3, $$slotProps) => {
          var fragment_2 = comment();
          var node_2 = first_child(fragment_2);
          {
            var consequent = ($$anchor4) => {
              var fragment_3 = comment();
              var node_3 = first_child(fragment_3);
              slot(node_3, $$props, "thumbnail", {}, null);
              append($$anchor4, fragment_3);
            };
            var alternate = ($$anchor4) => {
              var fragment_4 = comment();
              var node_4 = first_child(fragment_4);
              slot(node_4, $$props, "default", {}, null);
              append($$anchor4, fragment_4);
            };
            if_block(node_2, ($$render) => {
              if ($$slots.thumbnail) $$render(consequent);
              else $$render(alternate, false);
            });
          }
          append($$anchor3, fragment_2);
        }),
        $$slots: { default: true }
      }));
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if ($$slots.thumbnail || enableFallbackThumbnail()) $$render(consequent_1);
    });
  }
  var node_5 = sibling(node, 2);
  {
    var consequent_2 = ($$anchor2) => {
      var fragment_5 = comment();
      var node_6 = first_child(fragment_5);
      BodyChild_default(node_6, {
        children: wrap_snippet(Lightbox, ($$anchor3, $$slotProps) => {
          var fragment_6 = comment();
          var node_7 = first_child(fragment_6);
          ModalCover_default(node_7, spread_props(
            {
              get transitionDuration() {
                return transitionDuration();
              }
            },
            () => customization().coverProps || {},
            {
              $$events: { click: coverClick },
              children: wrap_snippet(Lightbox, ($$anchor4, $$slotProps2) => {
                var fragment_7 = comment();
                var node_8 = first_child(fragment_7);
                Modal_default(node_8, spread_props(
                  {
                    get imagePreset() {
                      return imagePreset();
                    },
                    get transitionDuration() {
                      return transitionDuration();
                    }
                  },
                  () => customization().lightboxProps || {},
                  {
                    $$events: { click: modalClick },
                    children: wrap_snippet(Lightbox, ($$anchor5, $$slotProps3) => {
                      var fragment_8 = root_8();
                      var node_9 = first_child(fragment_8);
                      LightboxHeader_default(node_9, spread_props(
                        {
                          get imagePreset() {
                            return imagePreset();
                          },
                          get showCloseButton() {
                            return showCloseButton();
                          },
                          get enableEscapeToClose() {
                            return enableEscapeToClose();
                          },
                          get closeButtonProps() {
                            return customization().closeButtonProps;
                          }
                        },
                        () => customization().lightboxHeaderProps || {},
                        { $$events: { close } }
                      ));
                      var node_10 = sibling(node_9, 2);
                      LightboxBody_default(node_10, {
                        get imagePreset() {
                          return imagePreset();
                        },
                        get enableImageExpand() {
                          return enableImageExpand();
                        },
                        children: wrap_snippet(Lightbox, ($$anchor6, $$slotProps4) => {
                          var fragment_9 = comment();
                          var node_11 = first_child(fragment_9);
                          slot(node_11, $$props, "default", {}, null);
                          append($$anchor6, fragment_9);
                        }),
                        $$slots: { default: true }
                      });
                      var node_12 = sibling(node_10, 2);
                      LightboxFooter_default(node_12, spread_props(
                        {
                          get imagePreset() {
                            return imagePreset();
                          },
                          get title() {
                            return title();
                          },
                          get description() {
                            return description();
                          }
                        },
                        () => customization().lightboxFooterProps || {}
                      ));
                      append($$anchor5, fragment_8);
                    }),
                    $$slots: { default: true }
                  }
                ));
                append($$anchor4, fragment_7);
              }),
              $$slots: { default: true }
            }
          ));
          append($$anchor3, fragment_6);
        }),
        $$slots: { default: true }
      });
      append($$anchor2, fragment_5);
    };
    if_block(node_5, ($$render) => {
      if (isVisible()) $$render(consequent_2);
    });
  }
  append($$anchor, fragment);
  bind_prop($$props, "programmaticController", programmaticController);
  return pop({
    get programmaticController() {
      return programmaticController;
    },
    ...legacy_api()
  });
}
if (import.meta.hot) {
  Lightbox = hmr(Lightbox, () => Lightbox[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = Lightbox[HMR].source;
    set(Lightbox[HMR].source, module.default[HMR].original);
  });
}
var Lightbox_default = Lightbox;
mark_module_end(Lightbox);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/PreviousImageButton.svelte
mark_module_start();
PreviousImageButton[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/PreviousImageButton.svelte";
var root9 = add_locations(template(`<button class="previous-button s-F22KiyafEokL"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="s-F22KiyafEokL"><g><path class="arrow s-F22KiyafEokL" d="M8.7,7.22,4.59,11.33a1,1,0,0,0,0,1.41l4,4"></path></g></svg></button>`), PreviousImageButton[FILENAME], [
  [
    5,
    0,
    [
      [7, 4, [[8, 8, [[9, 12]]]]]
    ]
  ]
]);
var $$css7 = {
  hash: "s-F22KiyafEokL",
  code: "\n    button.s-F22KiyafEokL {\n        background: transparent;\n        border: none;\n        font-size: 1rem;\n        width: 50%;\n        height: 100%;\n    }\n\n    button.s-F22KiyafEokL:active {\n        background: transparent;\n    }\n\n    button.s-F22KiyafEokL:disabled {\n        color: gray;\n    }\n\n    button:disabled.hideDisabled.s-F22KiyafEokL {\n        visibility: hidden;\n    }\n    svg.s-F22KiyafEokL {\n        display: inline-block;\n        height: 5rem;\n    }\n    .previous-button.s-F22KiyafEokL {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 50%;\n        z-index: 4;\n        text-align: left;\n    }\n    .arrow.s-F22KiyafEokL {\n        fill: none;\n        stroke: var(--svelte-lightbox-arrows-color);\n        stroke-linecap: round;\n        stroke-linejoin: bevel;\n        stroke-width: 1.5px;\n        margin: 10px;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJldmlvdXNJbWFnZUJ1dHRvbi5zdmVsdGUiLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiUHJldmlvdXNJbWFnZUJ1dHRvbi5zdmVsdGUiXX0= */"
};
function PreviousImageButton($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, PreviousImageButton);
  append_styles($$anchor, $$css7);
  let activeImage = prop($$props, "activeImage", 8);
  let character = prop($$props, "character", 8);
  var button = root9();
  template_effect(() => {
    button.disabled = strict_equals(character(), "loop", false) && strict_equals(activeImage(), 0);
    toggle_class(button, "hideDisabled", strict_equals(character(), "hide"));
  });
  event("click", button, function($$arg) {
    bubble_event.call(this, $$props, $$arg);
  });
  append($$anchor, button);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  PreviousImageButton = hmr(PreviousImageButton, () => PreviousImageButton[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-F22KiyafEokL");
    module.default[HMR].source = PreviousImageButton[HMR].source;
    set(PreviousImageButton[HMR].source, module.default[HMR].original);
  });
}
var PreviousImageButton_default = PreviousImageButton;
mark_module_end(PreviousImageButton);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/NextImageButton.svelte
mark_module_start();
NextImageButton[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/NextImageButton.svelte";
var root10 = add_locations(template(`<button class="next-button s-zp32VUQZfxLs"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="s-zp32VUQZfxLs"><g><path d="M15.3,16.78l4.11-4.11a1,1,0,0,0,0-1.41l-4-4" class="arrow s-zp32VUQZfxLs"></path></g></svg></button>`), NextImageButton[FILENAME], [
  [
    6,
    0,
    [
      [
        8,
        4,
        [[9, 8, [[10, 12]]]]
      ]
    ]
  ]
]);
var $$css8 = {
  hash: "s-zp32VUQZfxLs",
  code: "\n    button.s-zp32VUQZfxLs {\n        background: transparent;\n        border: none;\n        font-size: 1rem;\n        width: 50%;\n        height: 100%;\n    }\n\n    button.s-zp32VUQZfxLs:active {\n        background: transparent;\n    }\n\n    button.s-zp32VUQZfxLs:disabled {\n        color: gray;\n    }\n\n    button:disabled.hideDisabled.s-zp32VUQZfxLs {\n        visibility: hidden;\n    }\n    svg.s-zp32VUQZfxLs {\n        display: inline-block;\n        height: 5rem;\n    }\n    .next-button.s-zp32VUQZfxLs {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        z-index: 4;\n        text-align: right;\n    }\n    .arrow.s-zp32VUQZfxLs {\n        fill: none;\n        stroke: var(--svelte-lightbox-arrows-color);\n        stroke-linecap: round;\n        stroke-linejoin: bevel;\n        stroke-width: 1.5px;\n        margin: 10px;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmV4dEltYWdlQnV0dG9uLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJOZXh0SW1hZ2VCdXR0b24uc3ZlbHRlIl19 */"
};
function NextImageButton($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, NextImageButton);
  append_styles($$anchor, $$css8);
  let imageCount = prop($$props, "imageCount", 8);
  let activeImage = prop($$props, "activeImage", 8);
  let character = prop($$props, "character", 8);
  var button = root10();
  template_effect(() => {
    button.disabled = strict_equals(character(), "loop", false) && strict_equals(activeImage(), imageCount() - 1);
    toggle_class(button, "hideDisabled", strict_equals(character(), "hide"));
  });
  event("click", button, function($$arg) {
    bubble_event.call(this, $$props, $$arg);
  });
  append($$anchor, button);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  NextImageButton = hmr(NextImageButton, () => NextImageButton[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-zp32VUQZfxLs");
    module.default[HMR].source = NextImageButton[HMR].source;
    set(NextImageButton[HMR].source, module.default[HMR].original);
  });
}
var NextImageButton_default = NextImageButton;
mark_module_end(NextImageButton);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryController.svelte
mark_module_start();
GalleryController[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryController.svelte";
var root11 = add_locations(template(`<svelte-css-wrapper style="display: contents"><!></svelte-css-wrapper> <!> <svelte-css-wrapper style="display: contents"><!></svelte-css-wrapper>`, 1), GalleryController[FILENAME], []);
function GalleryController($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, GalleryController);
  const $$stores = setup_stores();
  const $activeImageStore = () => (validate_store(activeImageStore(), "activeImageStore"), store_get(activeImageStore(), "$activeImageStore", $$stores));
  const $arrowsConfigStore = () => (validate_store(arrowsConfigStore(), "arrowsConfigStore"), store_get(arrowsConfigStore(), "$arrowsConfigStore", $$stores));
  const $imageCountStore = () => (validate_store(imageCountStore(), "imageCountStore"), store_get(imageCountStore(), "$imageCountStore", $$stores));
  const fullscreen = mutable_state();
  let imagePreset = prop($$props, "imagePreset", 8, "");
  let imageCountStore = prop($$props, "imageCountStore", 8);
  let activeImageStore = prop($$props, "activeImageStore", 8);
  let arrowsConfigStore = prop($$props, "arrowsConfigStore", 8);
  const previousImage = () => {
    if (strict_equals($activeImageStore(), 0)) {
      if (strict_equals($arrowsConfigStore().character, "loop")) {
        activeImageStore().set($imageCountStore() - 1);
      }
    } else {
      activeImageStore().set($activeImageStore() - 1);
    }
  };
  const nextImage = () => {
    if (strict_equals($activeImageStore(), $imageCountStore() - 1)) {
      if (strict_equals($arrowsConfigStore().character, "loop")) {
        activeImageStore().set(0);
      }
    } else {
      activeImageStore().set($activeImageStore() + 1);
    }
  };
  const handleKey = (event2) => {
    if ($arrowsConfigStore().enableKeyboardControl) {
      switch (event2.key) {
        case "ArrowLeft": {
          previousImage();
          break;
        }
        case "ArrowRight": {
          nextImage();
          break;
        }
      }
    }
  };
  legacy_pre_effect(() => deep_read_state(imagePreset()), () => {
    set(fullscreen, strict_equals(imagePreset(), "fullscreen"));
  });
  legacy_pre_effect_reset();
  init();
  var fragment = root11();
  event("keydown", $window, (event2) => handleKey(event2));
  var node = first_child(fragment);
  {
    css_props(node, () => ({
      "--svelte-lightbox-arrows-color": $arrowsConfigStore().color
    }));
    PreviousImageButton_default(node.lastChild, {
      get activeImage() {
        return $activeImageStore();
      },
      get character() {
        return $arrowsConfigStore().character;
      },
      $$events: { click: previousImage }
    });
    reset(node);
  }
  var node_1 = sibling(node, 2);
  slot(node_1, $$props, "default", {}, null);
  var node_2 = sibling(node_1, 2);
  {
    css_props(node_2, () => ({
      "--svelte-lightbox-arrows-color": $arrowsConfigStore().color
    }));
    NextImageButton_default(node_2.lastChild, {
      get activeImage() {
        return $activeImageStore();
      },
      get imageCount() {
        return $imageCountStore();
      },
      get character() {
        return $arrowsConfigStore().character;
      },
      $$events: { click: nextImage }
    });
    reset(node_2);
  }
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  GalleryController = hmr(GalleryController, () => GalleryController[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = GalleryController[HMR].source;
    set(GalleryController[HMR].source, module.default[HMR].original);
  });
}
var GalleryController_default = GalleryController;
mark_module_end(GalleryController);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/Gallery.svelte
mark_module_start();
Gallery[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/Gallery.svelte";
var root_5 = add_locations(template(`<!> <!> <!>`, 1), Gallery[FILENAME], []);
var root12 = add_locations(template(`<!> <!>`, 1), Gallery[FILENAME], []);
function Gallery($$anchor, $$props) {
  check_target(new.target);
  const $$slots = sanitize_slots($$props);
  push($$props, false, Gallery);
  const $$stores = setup_stores();
  const $imageCountStore = () => (validate_store(imageCountStore, "imageCountStore"), store_get(imageCountStore, "$imageCountStore", $$stores));
  const $activeImageStore = () => (validate_store(activeImageStore, "activeImageStore"), store_get(activeImageStore, "$activeImageStore", $$stores));
  const activeImageTitle = mutable_state();
  const activeImageDescription = mutable_state();
  const gallery = mutable_state();
  let title = prop($$props, "title", 8, "");
  let description = prop($$props, "description", 8, "");
  let imagePreset = prop($$props, "imagePreset", 8, "");
  let customization = prop($$props, "customization", 24, () => ({}));
  let transitionDuration = prop($$props, "transitionDuration", 8, 300);
  let keepBodyScroll = prop($$props, "keepBodyScroll", 8, false);
  let enableImageExpand = prop($$props, "enableImageExpand", 8, false);
  let enableEscapeToClose = prop($$props, "enableEscapeToClose", 8, true);
  let enableClickToClose = prop($$props, "enableClickToClose", 8, false);
  let showCloseButton = prop($$props, "showCloseButton", 8, true);
  let isVisible = prop($$props, "isVisible", 12, false);
  let activeImage = prop($$props, "activeImage", 12, 0);
  let arrowsConfig = prop($$props, "arrowsConfig", 24, () => ({
    color: "black",
    character: "",
    enableKeyboardControl: true
  }));
  let modalClicked = false;
  let images = mutable_state([]);
  let thumbnailCount = 0;
  const imageCountStore = writable(get(images).length);
  const activeImageStore = writable(activeImage());
  const arrowsConfigStore = writable(arrowsConfig());
  const toggle = () => {
    isVisible(!isVisible());
    toggleScroll();
  };
  const open = () => {
    isVisible(true);
    toggleScroll();
  };
  const openImage = (imageId) => {
    open();
    activeImage(imageId);
  };
  const close = () => {
    isVisible(false);
    toggleScroll();
  };
  const coverClick = () => {
    if (!modalClicked || enableClickToClose()) {
      close();
    }
    modalClicked = false;
  };
  const modalClick = () => {
    modalClicked = true;
  };
  const keepOrEmptyImageList = (isVisible2) => {
    if (!isVisible2) set(images, []);
  };
  let toggleScroll = () => {
  };
  const programmaticController = { toggle, open, close, openImage };
  setContext("activeImage", activeImageStore);
  setContext("imageCounter", (image) => {
    image.id = get(images).length;
    set(images, [...get(images), image]);
    store_set(imageCountStore, get(images).length);
    return $imageCountStore() - 1;
  });
  setContext("thumbnailCounter", () => {
    return thumbnailCount++;
  });
  setContext("openImage", openImage);
  onMount(() => {
    const defaultOverflow = document.body.style.overflow;
    toggleScroll = () => {
      if (!keepBodyScroll()) {
        if (isVisible()) {
          document.body.style.overflow = "hidden";
        } else {
          document.body.style.overflow = defaultOverflow;
        }
      }
    };
  });
  legacy_pre_effect(() => deep_read_state(activeImage()), () => {
    activeImageStore.set(activeImage());
  });
  legacy_pre_effect(() => deep_read_state(arrowsConfig()), () => {
    arrowsConfigStore.set(arrowsConfig());
  });
  legacy_pre_effect(() => deep_read_state(isVisible()), () => {
    keepOrEmptyImageList(isVisible());
  });
  legacy_pre_effect(
    () => (get(images), $activeImageStore(), deep_read_state(title())),
    () => {
      var _a;
      set(activeImageTitle, ((_a = get(images)[$activeImageStore()]) == null ? void 0 : _a.title) || title() || "");
    }
  );
  legacy_pre_effect(
    () => (get(images), $activeImageStore(), deep_read_state(description())),
    () => {
      var _a;
      set(activeImageDescription, ((_a = get(images)[$activeImageStore()]) == null ? void 0 : _a.description) || description() || "");
    }
  );
  legacy_pre_effect(
    () => ($imageCountStore(), $activeImageStore()),
    () => {
      set(gallery, {
        imageCount: $imageCountStore(),
        activeImage: $activeImageStore()
      });
    }
  );
  legacy_pre_effect_reset();
  init();
  var fragment = root12();
  var node = first_child(fragment);
  {
    var consequent = ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      slot(node_1, $$props, "thumbnail", {}, null);
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if ($$slots.thumbnail) $$render(consequent);
    });
  }
  var node_2 = sibling(node, 2);
  {
    var consequent_1 = ($$anchor2) => {
      var fragment_2 = comment();
      var node_3 = first_child(fragment_2);
      BodyChild_default(node_3, {
        children: wrap_snippet(Gallery, ($$anchor3, $$slotProps) => {
          var fragment_3 = comment();
          var node_4 = first_child(fragment_3);
          ModalCover_default(node_4, spread_props(
            {
              get transitionDuration() {
                return transitionDuration();
              }
            },
            () => customization().coverProps || {},
            {
              $$events: { click: coverClick },
              children: wrap_snippet(Gallery, ($$anchor4, $$slotProps2) => {
                var fragment_4 = comment();
                var node_5 = first_child(fragment_4);
                Modal_default(node_5, spread_props(
                  {
                    get imagePreset() {
                      return imagePreset();
                    },
                    get transitionDuration() {
                      return transitionDuration();
                    }
                  },
                  () => customization().lightboxProps || {},
                  {
                    $$events: { click: modalClick },
                    children: wrap_snippet(Gallery, ($$anchor5, $$slotProps3) => {
                      var fragment_5 = root_5();
                      var node_6 = first_child(fragment_5);
                      LightboxHeader_default(node_6, spread_props(
                        {
                          get imagePreset() {
                            return imagePreset();
                          },
                          get showCloseButton() {
                            return showCloseButton();
                          },
                          get enableEscapeToClose() {
                            return enableEscapeToClose();
                          },
                          get closeButtonProps() {
                            return customization().closeButtonProps;
                          }
                        },
                        () => customization().lightboxHeaderProps || {},
                        { $$events: { close } }
                      ));
                      var node_7 = sibling(node_6, 2);
                      LightboxBody_default(node_7, {
                        get imagePreset() {
                          return imagePreset();
                        },
                        get enableImageExpand() {
                          return enableImageExpand();
                        },
                        children: wrap_snippet(Gallery, ($$anchor6, $$slotProps4) => {
                          var fragment_6 = comment();
                          var node_8 = first_child(fragment_6);
                          GalleryController_default(node_8, {
                            get imagePreset() {
                              return imagePreset();
                            },
                            imageCountStore,
                            activeImageStore,
                            arrowsConfigStore,
                            children: wrap_snippet(Gallery, ($$anchor7, $$slotProps5) => {
                              var fragment_7 = comment();
                              var node_9 = first_child(fragment_7);
                              slot(node_9, $$props, "default", {}, null);
                              append($$anchor7, fragment_7);
                            }),
                            $$slots: { default: true }
                          });
                          append($$anchor6, fragment_6);
                        }),
                        $$slots: { default: true }
                      });
                      var node_10 = sibling(node_7, 2);
                      LightboxFooter_default(node_10, spread_props(
                        {
                          get imagePreset() {
                            return imagePreset();
                          },
                          get title() {
                            return get(activeImageTitle);
                          },
                          get description() {
                            return get(activeImageDescription);
                          },
                          get gallery() {
                            return get(gallery);
                          }
                        },
                        () => customization().lightboxFooterProps || {}
                      ));
                      append($$anchor5, fragment_5);
                    }),
                    $$slots: { default: true }
                  }
                ));
                append($$anchor4, fragment_4);
              }),
              $$slots: { default: true }
            }
          ));
          append($$anchor3, fragment_3);
        }),
        $$slots: { default: true }
      });
      append($$anchor2, fragment_2);
    };
    if_block(node_2, ($$render) => {
      if (isVisible()) $$render(consequent_1);
    });
  }
  append($$anchor, fragment);
  bind_prop($$props, "programmaticController", programmaticController);
  return pop({
    get programmaticController() {
      return programmaticController;
    },
    ...legacy_api()
  });
}
if (import.meta.hot) {
  Gallery = hmr(Gallery, () => Gallery[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = Gallery[HMR].source;
    set(Gallery[HMR].source, module.default[HMR].original);
  });
}
var Gallery_default = Gallery;
mark_module_end(Gallery);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryThumbnail.svelte
mark_module_start();
GalleryThumbnail[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryThumbnail.svelte";
var root13 = add_locations(template(`<div><!></div>`), GalleryThumbnail[FILENAME], [[10, 0]]);
var $$css9 = {
  hash: "s-oeMAqZ84tM10",
  code: "\n    div.s-oeMAqZ84tM10 {\n        position: static;\n        cursor: zoom-in;\n    }\n    .svelte-lightbox-thumbnail > * {\n        max-width: 100%;\n        height: auto;\n    }\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FsbGVyeVRodW1ibmFpbC5zdmVsdGUiLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiR2FsbGVyeVRodW1ibmFpbC5zdmVsdGUiXX0= */"
};
function GalleryThumbnail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, ["id"]);
  push($$props, false, GalleryThumbnail);
  append_styles($$anchor, $$css9);
  let id = prop($$props, "id", 12);
  const openImage = getContext("openImage");
  if (!id()) {
    const thumbnailCounterFunction = getContext("thumbnailCounter");
    id(thumbnailCounterFunction());
  }
  init();
  var div = root13();
  let attributes;
  var node = child(div);
  slot(node, $$props, "default", {}, null);
  reset(div);
  template_effect(() => {
    attributes = set_attributes(
      div,
      attributes,
      {
        "aria-label": "thumbnail",
        ...$$restProps,
        role: "button",
        tabindex: "0"
      },
      "s-oeMAqZ84tM10"
    );
    toggle_class(div, "svelte-lightbox-thumbnail", true);
  });
  event("click", div, () => openImage(id()));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  GalleryThumbnail = hmr(GalleryThumbnail, () => GalleryThumbnail[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-oeMAqZ84tM10");
    module.default[HMR].source = GalleryThumbnail[HMR].source;
    set(GalleryThumbnail[HMR].source, module.default[HMR].original);
  });
}
var GalleryThumbnail_default = GalleryThumbnail;
mark_module_end(GalleryThumbnail);

// node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryImage.svelte
mark_module_start();
GalleryImage[FILENAME] = "node_modules/.pnpm/svelte-lightbox@1.1.6_svelte@5.15.0/node_modules/svelte-lightbox/dist/Gallery/GalleryImage.svelte";
function GalleryImage($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, ["title", "description"]);
  push($$props, false, GalleryImage);
  const $$stores = setup_stores();
  const $activeImageStore = () => (validate_store(activeImageStore, "activeImageStore"), store_get(activeImageStore, "$activeImageStore", $$stores));
  let title = prop($$props, "title", 8, "");
  let description = prop($$props, "description", 8, "");
  const activeImageStore = getContext("activeImage");
  const imageCounterFunction = getContext("imageCounter");
  const imageId = imageCounterFunction({
    title: title(),
    description: description()
  });
  init();
  var fragment = comment();
  var node = first_child(fragment);
  {
    var consequent = ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      slot(node_1, $$props, "default", spread_props({}, () => $$restProps), null);
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if (strict_equals($activeImageStore(), imageId)) $$render(consequent);
    });
  }
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  GalleryImage = hmr(GalleryImage, () => GalleryImage[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = GalleryImage[HMR].source;
    set(GalleryImage[HMR].source, module.default[HMR].original);
  });
}
var GalleryImage_default = GalleryImage;
mark_module_end(GalleryImage);
export {
  BodyChild_default as BodyChild,
  GalleryController_default as GalleryController,
  GalleryImage_default as GalleryImage,
  GalleryThumbnail_default as GalleryThumbnail,
  Lightbox_default as Lightbox,
  LightboxBody_default as LightboxBody,
  LightboxFooter_default as LightboxFooter,
  Gallery_default as LightboxGallery,
  LightboxHeader_default as LightboxHeader,
  LightboxThumbnail_default as LightboxThumbnail,
  Modal_default as Modal,
  ModalCover_default as ModalCover,
  NextImageButton_default as NextImageButton,
  PreviousImageButton_default as PreviousImageButton,
  i18n_default as i18n
};
//# sourceMappingURL=svelte-lightbox.js.map
